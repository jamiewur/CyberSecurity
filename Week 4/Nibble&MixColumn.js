let map1 = new Map()
map1.set('0000','1001');
map1.set('0001','0100');
map1.set('0010','1010');
map1.set('0011','1011');
map1.set('0100','1101');
map1.set('0101','0001');
map1.set('0110','1000');
map1.set('0111','0101');
map1.set('1000','0110');
map1.set('1001','0010');
map1.set('1010','0000');
map1.set('1011','0011');
map1.set('1100','1100');
map1.set('1101','1110');
map1.set('1110','1111');
map1.set('1111','0111');

let gf16Lookup = [
    [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
    [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0XB, 0XC, 0XD, 0XE, 0XF],
    [0x0, 0x2, 0x4, 0x6, 0x8, 0xA, 0xC, 0xE, 0x3, 0x1, 0x7, 0X5, 0XB, 0X9, 0XF, 0XD],
    [0X0, 0x3, 0x6, 0x5, 0xC, 0xF, 0xA, 0x9, 0xB, 0x8, 0xD, 0xE, 0x7, 0x4, 0x1, 0x2],
    [0X0, 0x4, 0x8, 0xC, 0x3, 0x7, 0xB, 0xF, 0x6, 0x2, 0xE, 0xA, 0x5, 0x1, 0xD, 0x9],
    [0X0, 0x5, 0xA, 0xF, 0x7, 0x2, 0xD, 0x8, 0xE, 0xB, 0x4, 0x1, 0x9, 0xC, 0x3, 0x6],
    [0X0, 0x6, 0xC, 0xA, 0xB, 0xD, 0x7, 0x1, 0x5, 0x3, 0x9, 0xF, 0xE, 0x8, 0x2, 0x4],
    [0x0, 0x7, 0xE, 0x9, 0xF, 0x8, 0x1, 0x6, 0xD, 0xA, 0x3, 0x4, 0x2, 0x5, 0xC, 0xB],
    [0X0, 0x8, 0x3, 0xB, 0x6, 0xE, 0x5, 0xD, 0xC, 0x4, 0xF, 0x7, 0xA, 0x2, 0x9, 0x1],
    [0X0, 0x9, 0x1, 0x8, 0x2, 0xB, 0x3, 0xA, 0x4, 0xD, 0x5, 0xC, 0x6, 0xF, 0x7, 0xE],
    [0X0, 0xA, 0x7, 0xD, 0xE, 0x4, 0x9, 0x3, 0xF, 0x5, 0x8, 0x2, 0x1, 0xB, 0x6, 0xC],
    [0X0, 0xB, 0x5, 0xE, 0xA, 0x1, 0xF, 0x4, 0x7, 0xC, 0x2, 0x9, 0xD, 0x6, 0x8, 0x3],
    [0X0, 0xC, 0xB, 0x7, 0x5, 0x9, 0xE, 0x2, 0xA, 0x6, 0x1, 0xD, 0xF, 0x3, 0x4, 0x8],
    [0X0, 0xD, 0x9, 0x4, 0x1, 0xC, 0x8, 0x5, 0x2, 0xF, 0xB, 0x6, 0x3, 0xE, 0xA, 0x7],
    [0X0, 0xE, 0xF, 0x1, 0xD, 0x3, 0x2, 0xC, 0x9, 0x7, 0x6, 0x8, 0x4, 0xA, 0xB, 0x5],
    [0X0, 0xF, 0xD, 0x2, 0x9, 0x6, 0x4, 0xB, 0x1, 0xE, 0xC, 0x3, 0x8, 0x7, 0x5, 0xA]
];

function checkbox(key) {
    document.getElementById('output1').value = map1.get(key)
}


function S00() {
    let s00 = document.getElementById("input2").value.substring(0,4)
    return s00;
}
function S01() {
    let s01 = document.getElementById("input2").value.substring(4,8)
    return s01;
}
function S10() {
    let s10 = document.getElementById("input2").value.substring(8,12)
    return s10;
}
function S11() {
    let s11 = document.getElementById("input2").value.substring(12,16)
    return s11;
}

function S00i() {
    let n = parseInt(S00(),2);
    let m = parseInt(S10(),2);
    let l = gf16Lookup[1][n]
    let r = gf16Lookup[4][m];
    let result = l^r;
    return result.toString(2);
}

function S01i() {
    let n = parseInt(S01(),2);
    let m = parseInt(S11(),2);
    let l = gf16Lookup[1][n]
    let r = gf16Lookup[4][m];
    let result = l^r;
    return result.toString(2);
}

function S10i() {
    let n = parseInt(S00(),2);
    let m = parseInt(S10(),2);
    let l = gf16Lookup[4][n]
    let r = gf16Lookup[1][m];
    let result = l^r;
    return result.toString(2);
}

function S11i() {
    let n = parseInt(S01(),2);
    let m = parseInt(S11(),2);
    let l = gf16Lookup[4][n]
    let r = gf16Lookup[1][m];
    let result = l^r;
    return result.toString(2);
}

function generateMatrixS() {
    let s00=S00();
    let s01=S01();
    let s10=S10();
    let s11=S11();
    document.getElementById("matrixS").innerText = s00 + " "+s01+ "\n"+s10+" "+s11
}

function generateMatrixM() {
    document.getElementById("matrixM").innerText = '1'+' '+'4'+'\n'+'4'+' '+'1';
}

function outputBinary() {
    let s00 = padding(S00i());
    let s01 = padding(S01i());
    let s10 = padding(S10i());
    let s11 = padding(S11i());
    document.getElementById("output2").innerText = s00+' '+s01+ '' +'\n'+s10+' '+s11;
}

function padding(number) {
    const pad = "0000";
    const padded = pad.substring(0, pad.length - number.length) +number;
    return padded;
}